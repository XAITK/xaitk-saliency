# This is a basic workflow to help you get started with Actions

name: Quality Assurance

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
      - release
  pull_request:
    branches:
      - master
      - release
      - update-to-v*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# NOTE: Github actions does not support anchors apparently. Forgive duplication of job
#       steps.
jobs:
  mypy:
    runs-on: ubuntu-latest
    container: python:3.9
    steps:
      - name: Install Git LFS
        run: |
          apt-get -qq update
          apt-get -qq install -y git-lfs
        shell: bash
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      - uses: actions/cache@v4
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: ~/.cache
          key: python-3.9-${{ hashFiles('poetry.lock') }}
      - name: Setup Environment
        uses: ./.github/actions/quality-stage
      - name: Typecheck with MyPy
        run: poetry run mypy --config-file pyproject.toml src/ tests/
        shell: bash

  ruff-lint:
    runs-on: ubuntu-latest
    container: python:3.9
    steps:
      - name: Install Git LFS
        run: |
          apt-get -qq update
          apt-get -qq install -y git-lfs
        shell: bash
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      - uses: actions/cache@v4
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: ~/.cache
          key: python-3.9-${{ hashFiles('poetry.lock') }}
      - name: Setup Environment
        uses: ./.github/actions/quality-stage
      - name: Lint with Ruff
        run: poetry run ruff check --config pyproject.toml
        shell: bash

  ruff-format:
    runs-on: ubuntu-latest
    container: python:3.9
    steps:
      - name: Install Git LFS
        run: |
          apt-get -qq update
          apt-get -qq install -y git-lfs
        shell: bash
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      - uses: actions/cache@v4
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: ~/.cache
          key: python-3.9-${{ hashFiles('poetry.lock') }}
      - name: Setup Environment
        uses: ./.github/actions/quality-stage
      - name: Format check with Ruff
        run: poetry run ruff format --config pyproject.toml --check
        shell: bash

  sphinx-lint:
    runs-on: ubuntu-latest
    container: python:3.9
    steps:
      - name: Install Git LFS
        run: |
          apt-get -qq update
          apt-get -qq install -y git-lfs
        shell: bash
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      - uses: actions/cache@v4
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: ~/.cache
          key: python-3.9-${{ hashFiles('poetry.lock') }}
      - name: Setup Environment
        uses: ./.github/actions/quality-stage
      - name: Lint docs with Spinx-lint
        run: poetry run sphinx-lint --enable all --disable leaked-markup --max-line-length 120 -i docs/_implementations docs
        shell: bash
